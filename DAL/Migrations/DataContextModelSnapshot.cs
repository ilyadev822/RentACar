// <auto-generated />
using System;
using DAL.DataFiles;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Hebrew_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.DataModels.Branch", b =>
                {
                    b.Property<int>("BranchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BranchAdress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.HasKey("BranchID");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("DAL.DataModels.Car", b =>
                {
                    b.Property<int>("CarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<string>("CarLicense")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CarModelID")
                        .HasColumnType("int");

                    b.Property<string>("CarPicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailbleForRent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProperForRent")
                        .HasColumnType("bit");

                    b.Property<int?>("Kilometrag")
                        .HasColumnType("int");

                    b.HasKey("CarID");

                    b.HasAlternateKey("CarLicense");

                    b.HasIndex("BranchID");

                    b.HasIndex("CarLicense")
                        .IsUnique();

                    b.HasIndex("CarModelID");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("DAL.DataModels.CarModel", b =>
                {
                    b.Property<int>("CarModelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CarModelName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CarVendor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gear")
                        .HasColumnType("int");

                    b.Property<int>("PriceForDay")
                        .HasColumnType("int");

                    b.Property<int>("PriceForDayLate")
                        .HasColumnType("int");

                    b.Property<DateTime>("YearOfManufacture")
                        .HasColumnType("datetime2");

                    b.HasKey("CarModelID");

                    b.HasIndex("CarModelName", "CarVendor", "YearOfManufacture")
                        .IsUnique();

                    b.ToTable("CarModels");
                });

            modelBuilder.Entity("DAL.DataModels.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarID")
                        .HasColumnType("int");

                    b.Property<string>("CarLicense")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EndRentDay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinalyEndRentDay")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsOrderClosed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDayRent")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TotalSumOfRent")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("CarID");

                    b.HasIndex("UserID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DAL.DataModels.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Roles")
                        .HasColumnType("int");

                    b.Property<string>("Tz")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserID");

                    b.HasIndex("Tz")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DAL.DataModels.Car", b =>
                {
                    b.HasOne("DAL.DataModels.Branch", "BranchNavigation")
                        .WithMany("Cars")
                        .HasForeignKey("BranchID")
                        .HasConstraintName("FK_Cars_Branches")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAL.DataModels.CarModel", "CarModelNavigation")
                        .WithMany("Cars")
                        .HasForeignKey("CarModelID")
                        .HasConstraintName("FK_Cars_CarModels")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BranchNavigation");

                    b.Navigation("CarModelNavigation");
                });

            modelBuilder.Entity("DAL.DataModels.Order", b =>
                {
                    b.HasOne("DAL.DataModels.Car", "CarNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("CarID")
                        .HasConstraintName("fk_orders_CarID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAL.DataModels.User", "UserNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("UserID")
                        .HasConstraintName("FK_Orders_Users")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CarNavigation");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("DAL.DataModels.Branch", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("DAL.DataModels.Car", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DAL.DataModels.CarModel", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("DAL.DataModels.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
